#! /bin/sh

HELP="
fdroid-git personal repository tool\n
================================\n
This tool helps developers host their own applications by posting them to \n
github pages for download. \n
\t	-d \ --directory\n
\t\t		Work in this directory, uses current directory by default\n
\t	-o \ --origin\n
\t\t		URL of the repository\n
\t	-c \ --codename\n
\t\t		Codename you want to use, defaults is \"testing\"\n
\t	-s \ --sources\n
\t\t		Folder with the packages to include in the repo\n
\t	-t \ --description\n
\t\t		Name of the override file\n
\t	-m \ --message\n
\t\t		Message to include in the commit\n
\t	-c \ --check\n
\t\t		Make sure the dependencies are installed\n
\t	-r \ --reset\n
\t\t		Re-generate all components of the repository\n
\t	-u \ --user \ --org \ --organization\n
\t\t		Us as user/organization page, post page to master branch\n
\t	-h \ --help\n
\t\t		Display this help message\n
"
DRY_RUN="NO"
RESET="NO"
CHECK="NO"

CURDIR=$(pwd)

ORIGIN="user.github.io"
CODENAME="testing"

SRCDIR="$CURDIR/packages"

. "./fdroidgit.conf"

while [ "$#" -gt 0 ]; do
	arg="$1"
	case $arg in
		-d|--directory)
			CURDIR="$2"
			shift
		;;
		-o|--origin)
			ORIGIN="$2"
			shift
		;;
		-c|--codename)
			CODENAME="$2"
			shift
		;;
		-s|--sources)
			SRCDIR="$2"
			shift
		;;
		-t|--description)
			DESCRIPTION="$2"
			shift
		;;
		-m,|--message)
			MESSAGE="$2"
			shift
		;;
		-c|--check)
			CHECK="YES"
		;;
		-r|--reset)
			RESET="YES"
		;;
		-u|--user|--org|--organization)
			ORG="YES"
		;;
		-h|--help)
			H="YES"
		;;
	esac
	shift
done

BASEDIR="$CURDIR/fdroid"
CONFDIR="$CURDIR/fdroid/repo"

confirm(){
	read -r -p "${1: -Are you sure? [y/N]} " response
	case $response in
		[yY][eE][sS])
			local s="YES"
			;;
		*)
			local s="NO"
			;;
	esac
	echo "$s"
}

checkdepends(){
	sudo apt-get install gnupg git rng-tools fdroidserver
	#sudo service rng-tools start
}

createdirs(){
	if [ -d "$CONFDIR" ]; then
		echo "directory exists"
	else
		fdroid init
		mkdir -p "$CONFDIR"
	fi
}

gendistrofile(){
	echo "repo_url = \"$ORIGIN\""	> "$BASEDIR/config.py"
	echo "repo_name = \"$CODENAME\""	>> "$BASEDIR/config.py"
	echo "repo_icon = \"$ICON\""	>> "$BASEDIR/config.py"
	echo "repo_description = \"\"\"\n$DESCRIPTION\n\"\"\""	>> "$BASEDIR/config.py"
}

includepackages(){
	cp "$CURDIR/fdroid-icon.png" $BASEDIR
	cd $BASEDIR
	cp "$SRCDIR/"* $CONFDIR
	fdroid update --create-metadata
}

if [ "$H" = "YES" ]; then
	echo -e $HELP
fi
if [ "$DRY_RUN" = "NO" ]; then
	echo "not a dry run"
	if [ -d "$SRCDIR" ]; then
		echo "found source dir"
		if [ -d "$CURDIR/.git" ]; then
			if [ "$RESET" = "YES" ]; then
				CHECK="YES"
				rm -rf "$BASEDIR"
			fi
			if [ "$CHECK" = "YES" ]; then
				checkdepends
			fi
			createdirs
			cd $CONFDIR
			gendistrofile
			includepackages
			DATE=$(date)
			if [ "$ORG" = "YES" ]; then
				git add . && git commit -am "Repository update: $MESSAGE $DATE" && git push origin master
			else
				git add . && git commit -am "Repository update: $MESSAGE $DATE" && git push origin gh-pages
			fi
		else
			echo "Fatal Error, this is not a git repository. Please create a git repository and enable github pages to use this script."
		fi
	else
		echo "Fatal Error, packages not found in package source directory"
	fi
fi
